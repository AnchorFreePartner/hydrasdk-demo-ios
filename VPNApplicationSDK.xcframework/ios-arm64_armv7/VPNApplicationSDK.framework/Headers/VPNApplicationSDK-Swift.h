#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef VPNAPPLICATIONSDK_SWIFT_H
#define VPNAPPLICATIONSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VPNApplicationSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AFAPIError, open) {
  AFAPIErrorUndefined = 101,
  AFAPIErrorSessionExceed = 102,
  AFAPIErrorTrafficExceed = 103,
  AFAPIErrorUnauthorized = 104,
  AFAPIErrorUserSuspended = 105,
  AFAPIErrorVpnServerUnavailable = 106,
  AFAPIErrorInternalServerError = 107,
  AFAPIErrorDeviceExceed = 108,
  AFAPIErrorNetworkError = 109,
  AFAPIErrorInvalidPurchase = 110,
  AFAPIErrorUnknownServerResponse = 111,
  AFAPIErrorNotAuthorized = 112,
  AFAPIErrorBadRequest = 113,
  AFAPIErrorFailedResult = 114,
};


SWIFT_CLASS("_TtC17VPNApplicationSDK12AFAuthMethod")
@interface AFAuthMethod : NSObject
+ (AFAuthMethod * _Nonnull)anonymous SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)oauthWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)facebookWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)googleWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)twitterWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)githubWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)firebaseWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)customWithMethodName:(NSString * _Nonnull)methodName token:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AFAuthMethodType, open) {
  AFAuthMethodTypeAnonymous = 0,
  AFAuthMethodTypeOauth = 1,
  AFAuthMethodTypeFacebook = 2,
  AFAuthMethodTypeGoogle = 3,
  AFAuthMethodTypeTwitter = 4,
  AFAuthMethodTypeGithub = 5,
  AFAuthMethodTypeFirebase = 6,
};

@class NSCoder;

SWIFT_CLASS("_TtC17VPNApplicationSDK8AFBundle")
@interface AFBundle : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nonnull licenseName;
@property (nonatomic, readonly) NSInteger bundleID;
@property (nonatomic, readonly) NSInteger devicesLimit;
@property (nonatomic, readonly) NSInteger sessionsLimit;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK14AFCategoryType")
@interface AFCategoryType : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AFCategoryType * _Nonnull safe;)
+ (AFCategoryType * _Nonnull)safe SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AFCategoryType * _Nonnull unsafe;)
+ (AFCategoryType * _Nonnull)unsafe SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull representation;
- (nonnull instancetype)initWithCustom:(NSString * _Nonnull)custom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUnsafeCustom:(NSString * _Nonnull)unsafeCustom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum AFClientNetworkConfigurationAction : NSInteger;

SWIFT_CLASS("_TtC17VPNApplicationSDK28AFClientNetworkConfiguration")
@interface AFClientNetworkConfiguration : NSObject
@property (nonatomic, readonly) enum AFClientNetworkConfigurationAction action;
@property (nonatomic, readonly, copy) NSString * _Nullable networkType;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable ssid;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable bssid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AFClientNetworkConfigurationAction, open) {
  AFClientNetworkConfigurationActionEnable = 0,
  AFClientNetworkConfigurationActionDisable = 1,
  AFClientNetworkConfigurationActionEmpty = 2,
};


SWIFT_CLASS("_TtC17VPNApplicationSDK19AFClientNetworkList")
@interface AFClientNetworkList : NSObject
@property (nonatomic, readonly, copy) NSArray<AFClientNetworkConfiguration *> * _Nonnull configurations;
- (AFClientNetworkConfiguration * _Nullable)findWithSsid:(NSString * _Nonnull)ssid SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK20AFFireshieldCategory")
@interface AFFireshieldCategory : NSObject
+ (AFFireshieldCategory * _Nonnull)blockWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (AFFireshieldCategory * _Nonnull)proxyWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (AFFireshieldCategory * _Nonnull)bypassWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (AFFireshieldCategory * _Nonnull)alertWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)categoryNameFrom:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Action, open) {
  ActionProxy = 0,
  ActionBypass = 1,
  ActionBlock = 2,
  ActionAlert = 3,
};


SWIFT_CLASS("_TtC17VPNApplicationSDK16AFFireshieldRule")
@interface AFFireshieldRule : NSObject
+ (AFFireshieldRule * _Nullable)ruleWithFileName:(NSString * _Nonnull)fileName category:(AFCategoryType * _Nonnull)category error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSNumber;

SWIFT_CLASS("_TtC17VPNApplicationSDK18AFRemainingTraffic")
@interface AFRemainingTraffic : NSObject <NSCoding>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionStartTime;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull trafficUsageLimit;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull trafficUsed;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull trafficRemaining;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK14AFRemoteConfig")
@interface AFRemoteConfig : NSObject <NSCoding>
@property (nonatomic, readonly) BOOL isOptimalLocationDisabled;
@property (nonatomic, readonly, copy) NSString * _Nullable bypassListFilename;
@property (nonatomic, readonly, copy) NSString * _Nullable clientNetworkListFilename;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable configDictionary;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (NSArray<NSString *> * _Nonnull)supportEmails SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AFSubscriberPurchase;

SWIFT_CLASS("_TtC17VPNApplicationSDK12AFSubscriber")
@interface AFSubscriber : NSObject <NSCoding>
@property (nonatomic, readonly) NSInteger subscriberID;
@property (nonatomic, readonly) NSInteger activatedDevices;
@property (nonatomic, readonly) NSInteger activeSessions;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull extref;
@property (nonatomic, readonly, copy) NSString * _Nonnull carrierID;
@property (nonatomic, readonly, strong) AFBundle * _Nonnull bundle;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull socialProfiles;
@property (nonatomic, readonly, copy) NSArray<AFSubscriberPurchase *> * _Nonnull purchases;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK20AFSubscriberPurchase")
@interface AFSubscriberPurchase : NSObject <NSCoding>
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSDate * _Nonnull time;
@property (nonatomic, readonly) BOOL isActive;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK17AFTrafficCounters")
@interface AFTrafficCounters : NSObject
@property (nonatomic, readonly) uint64_t received;
@property (nonatomic, readonly) uint64_t transmitted;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK6AFUser")
@interface AFUser : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nullable accessToken;
@property (nonatomic, readonly, strong) AFSubscriber * _Nonnull subscriber;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;

SWIFT_CLASS("_TtC17VPNApplicationSDK17AFVirtualLocation")
@interface AFVirtualLocation : NSObject
@property (nonatomic, readonly, strong) NSString * _Nonnull code;
@property (nonatomic, readonly) NSInteger serversCount;
@property (nonatomic, readonly, strong) NSString * _Nonnull groupName;
+ (AFVirtualLocation * _Nonnull)locationWithCode:(NSString * _Nonnull)code SWIFT_WARN_UNUSED_RESULT;
+ (AFVirtualLocation * _Nonnull)optimal SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




enum FireshieldMode : NSInteger;
enum FireshieldService : NSInteger;

SWIFT_CLASS("_TtC17VPNApplicationSDK16FireshieldConfig")
@interface FireshieldConfig : NSObject
- (nonnull instancetype)initWithFireshieldMode:(enum FireshieldMode)fireshieldMode;
- (void)addService:(enum FireshieldService)fireshieldService;
- (void)addCategory:(AFFireshieldCategory * _Nonnull)fireshieldCategory;
- (void)addRule:(AFFireshieldRule * _Nonnull)fireshieldRule;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, FireshieldMode, open) {
  FireshieldModeDisabled = 0,
  FireshieldModeEnabled = 1,
  FireshieldModeSilent = 2,
  FireshieldModeVpn = 3,
};

typedef SWIFT_ENUM(NSInteger, FireshieldService, open) {
  FireshieldServiceSophos = 0,
  FireshieldServiceBitdefender = 1,
  FireshieldServiceIp = 2,
};

@class HydraSDKConfiguration;
enum VPNState : NSInteger;
@class AFHydraCategorization;

SWIFT_CLASS("_TtC17VPNApplicationSDK8HydraSDK")
@interface HydraSDK : NSObject
@property (nonatomic, readonly, strong) HydraSDKConfiguration * _Nonnull config;
@property (nonatomic, readonly) BOOL isLoggedIn;
@property (nonatomic, readonly, copy) NSString * _Nullable token;
@property (nonatomic, readonly, copy) NSDate * _Nullable connectedDate;
@property (nonatomic, readonly) enum VPNState state;
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceID;
@property (nonatomic, readonly, copy) NSString * _Nonnull carrierID;
@property (nonatomic, readonly) BOOL isBypassEnabled;
@property (nonatomic, readonly, strong) AFTrafficCounters * _Nullable counters;
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSError * _Nullable lastError;
@property (nonatomic, readonly, strong) AFHydraCategorization * _Nullable lastCategorization;
@property (nonatomic, readonly, strong) AFRemoteConfig * _Nullable remoteConfiguration;
- (nonnull instancetype)initWithConfiguration:(HydraSDKConfiguration * _Nonnull)configuration;
- (void)loginWithMethod:(AFAuthMethod * _Nonnull)method completion:(void (^ _Nonnull)(NSError * _Nullable, AFUser * _Nullable))completion;
- (void)logout:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)currentUser:(void (^ _Nonnull)(NSError * _Nullable, AFUser * _Nullable))completion;
- (void)availableLocations:(void (^ _Nonnull)(NSError * _Nullable, NSArray<AFVirtualLocation *> * _Nullable))completion;
- (void)purchaseWithToken:(NSString * _Nullable)token type:(NSString * _Nonnull)type completion:(void (^ _Nonnull)(NSError * _Nullable, NSDictionary<NSString *, id> * _Nullable))completion;
- (void)fetchRemoteConfigWithCompletion:(void (^ _Nonnull)(NSError * _Nullable, AFRemoteConfig * _Nullable))completion;
- (void)stop:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)startWithLocation:(AFVirtualLocation * _Nonnull)location completion:(void (^ _Nonnull)(NSError * _Nullable, AFVirtualLocation * _Nullable))completion;
- (void)remainingTraffic:(void (^ _Nonnull)(NSError * _Nullable, AFRemainingTraffic * _Nullable))completion;
- (void)scannedConnections:(void (^ _Nonnull)(NSError * _Nullable, NSUInteger))completion;
- (BOOL)updateWithConfiguration:(HydraSDKConfiguration * _Nonnull)configuration error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NEOnDemandRule;

SWIFT_CLASS("_TtC17VPNApplicationSDK21HydraSDKConfiguration")
@interface HydraSDKConfiguration : NSObject
- (nonnull instancetype)initWithHostURL:(NSString * _Nullable)hostURL carrierID:(NSString * _Nonnull)carrierID extensionBundleID:(NSString * _Nonnull)extensionBundleID groupID:(NSString * _Nonnull)groupID profileName:(NSString * _Nonnull)profileName debugLogging:(BOOL)debugLogging fireshieldConfig:(FireshieldConfig * _Nonnull)fireshieldConfig serverAddressDisplayName:(NSString * _Nullable)serverAddressDisplayName dnsAddress:(NSString * _Nullable)dnsAddress bypassDomains:(NSArray<NSString *> * _Nullable)bypassDomains onDemandRules:(NSArray<NEOnDemandRule *> * _Nullable)onDemandRules isBypassEnabled:(BOOL)isBypassEnabled isVPNIconFixEnabled:(BOOL)isVPNIconFixEnabled isOnDemandEnabled:(BOOL)isOnDemandEnabled deviceType:(NSString * _Nonnull)deviceType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




typedef SWIFT_ENUM(NSInteger, VPNState, open) {
  VPNStateInvalid = 0,
  VPNStateConnecting = 1,
  VPNStateConnected = 2,
  VPNStateDisconnecting = 3,
  VPNStateDisconnected = 4,
  VPNStateIdle = 5,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef VPNAPPLICATIONSDK_SWIFT_H
#define VPNAPPLICATIONSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VPNApplicationSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AFAPIError, open) {
  AFAPIErrorUndefined = 101,
  AFAPIErrorSessionExceed = 102,
  AFAPIErrorTrafficExceed = 103,
  AFAPIErrorUnauthorized = 104,
  AFAPIErrorUserSuspended = 105,
  AFAPIErrorVpnServerUnavailable = 106,
  AFAPIErrorInternalServerError = 107,
  AFAPIErrorDeviceExceed = 108,
  AFAPIErrorNetworkError = 109,
  AFAPIErrorInvalidPurchase = 110,
  AFAPIErrorUnknownServerResponse = 111,
  AFAPIErrorNotAuthorized = 112,
  AFAPIErrorBadRequest = 113,
  AFAPIErrorFailedResult = 114,
};


SWIFT_CLASS("_TtC17VPNApplicationSDK12AFAuthMethod")
@interface AFAuthMethod : NSObject
+ (AFAuthMethod * _Nonnull)anonymous SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)oauthWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)facebookWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)googleWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)twitterWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)githubWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)firebaseWithToken:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
+ (AFAuthMethod * _Nonnull)customWithMethodName:(NSString * _Nonnull)methodName token:(NSString * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AFAuthMethodType, open) {
  AFAuthMethodTypeAnonymous = 0,
  AFAuthMethodTypeOauth = 1,
  AFAuthMethodTypeFacebook = 2,
  AFAuthMethodTypeGoogle = 3,
  AFAuthMethodTypeTwitter = 4,
  AFAuthMethodTypeGithub = 5,
  AFAuthMethodTypeFirebase = 6,
};

@class NSCoder;

SWIFT_CLASS("_TtC17VPNApplicationSDK8AFBundle")
@interface AFBundle : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nonnull licenseName;
@property (nonatomic, readonly) NSInteger bundleID;
@property (nonatomic, readonly) NSInteger devicesLimit;
@property (nonatomic, readonly) NSInteger sessionsLimit;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK14AFCategoryType")
@interface AFCategoryType : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AFCategoryType * _Nonnull safe;)
+ (AFCategoryType * _Nonnull)safe SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AFCategoryType * _Nonnull unsafe;)
+ (AFCategoryType * _Nonnull)unsafe SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull representation;
- (nonnull instancetype)initWithCustom:(NSString * _Nonnull)custom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUnsafeCustom:(NSString * _Nonnull)unsafeCustom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum AFClientNetworkConfigurationAction : NSInteger;

SWIFT_CLASS("_TtC17VPNApplicationSDK28AFClientNetworkConfiguration")
@interface AFClientNetworkConfiguration : NSObject
@property (nonatomic, readonly) enum AFClientNetworkConfigurationAction action;
@property (nonatomic, readonly, copy) NSString * _Nullable networkType;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable ssid;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable bssid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AFClientNetworkConfigurationAction, open) {
  AFClientNetworkConfigurationActionEnable = 0,
  AFClientNetworkConfigurationActionDisable = 1,
  AFClientNetworkConfigurationActionEmpty = 2,
};


SWIFT_CLASS("_TtC17VPNApplicationSDK19AFClientNetworkList")
@interface AFClientNetworkList : NSObject
@property (nonatomic, readonly, copy) NSArray<AFClientNetworkConfiguration *> * _Nonnull configurations;
- (AFClientNetworkConfiguration * _Nullable)findWithSsid:(NSString * _Nonnull)ssid SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK20AFFireshieldCategory")
@interface AFFireshieldCategory : NSObject
+ (AFFireshieldCategory * _Nonnull)blockWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (AFFireshieldCategory * _Nonnull)proxyWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (AFFireshieldCategory * _Nonnull)bypassWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (AFFireshieldCategory * _Nonnull)alertWithCategory:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)categoryNameFrom:(AFCategoryType * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Action, open) {
  ActionProxy = 0,
  ActionBypass = 1,
  ActionBlock = 2,
  ActionAlert = 3,
};


SWIFT_CLASS("_TtC17VPNApplicationSDK16AFFireshieldRule")
@interface AFFireshieldRule : NSObject
+ (AFFireshieldRule * _Nullable)ruleWithFileName:(NSString * _Nonnull)fileName category:(AFCategoryType * _Nonnull)category error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSNumber;

SWIFT_CLASS("_TtC17VPNApplicationSDK18AFRemainingTraffic")
@interface AFRemainingTraffic : NSObject <NSCoding>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionStartTime;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull trafficUsageLimit;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull trafficUsed;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull trafficRemaining;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK14AFRemoteConfig")
@interface AFRemoteConfig : NSObject <NSCoding>
@property (nonatomic, readonly) BOOL isOptimalLocationDisabled;
@property (nonatomic, readonly, copy) NSString * _Nullable bypassListFilename;
@property (nonatomic, readonly, copy) NSString * _Nullable clientNetworkListFilename;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable configDictionary;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (NSArray<NSString *> * _Nonnull)supportEmails SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AFSubscriberPurchase;

SWIFT_CLASS("_TtC17VPNApplicationSDK12AFSubscriber")
@interface AFSubscriber : NSObject <NSCoding>
@property (nonatomic, readonly) NSInteger subscriberID;
@property (nonatomic, readonly) NSInteger activatedDevices;
@property (nonatomic, readonly) NSInteger activeSessions;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull extref;
@property (nonatomic, readonly, copy) NSString * _Nonnull carrierID;
@property (nonatomic, readonly, strong) AFBundle * _Nonnull bundle;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull socialProfiles;
@property (nonatomic, readonly, copy) NSArray<AFSubscriberPurchase *> * _Nonnull purchases;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK20AFSubscriberPurchase")
@interface AFSubscriberPurchase : NSObject <NSCoding>
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSDate * _Nonnull time;
@property (nonatomic, readonly) BOOL isActive;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK17AFTrafficCounters")
@interface AFTrafficCounters : NSObject
@property (nonatomic, readonly) uint64_t received;
@property (nonatomic, readonly) uint64_t transmitted;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC17VPNApplicationSDK6AFUser")
@interface AFUser : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nullable accessToken;
@property (nonatomic, readonly, strong) AFSubscriber * _Nonnull subscriber;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;

SWIFT_CLASS("_TtC17VPNApplicationSDK17AFVirtualLocation")
@interface AFVirtualLocation : NSObject
@property (nonatomic, readonly, strong) NSString * _Nonnull code;
@property (nonatomic, readonly) NSInteger serversCount;
@property (nonatomic, readonly, strong) NSString * _Nonnull groupName;
+ (AFVirtualLocation * _Nonnull)locationWithCode:(NSString * _Nonnull)code SWIFT_WARN_UNUSED_RESULT;
+ (AFVirtualLocation * _Nonnull)optimal SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




enum FireshieldMode : NSInteger;
enum FireshieldService : NSInteger;

SWIFT_CLASS("_TtC17VPNApplicationSDK16FireshieldConfig")
@interface FireshieldConfig : NSObject
- (nonnull instancetype)initWithFireshieldMode:(enum FireshieldMode)fireshieldMode;
- (void)addService:(enum FireshieldService)fireshieldService;
- (void)addCategory:(AFFireshieldCategory * _Nonnull)fireshieldCategory;
- (void)addRule:(AFFireshieldRule * _Nonnull)fireshieldRule;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, FireshieldMode, open) {
  FireshieldModeDisabled = 0,
  FireshieldModeEnabled = 1,
  FireshieldModeSilent = 2,
  FireshieldModeVpn = 3,
};

typedef SWIFT_ENUM(NSInteger, FireshieldService, open) {
  FireshieldServiceSophos = 0,
  FireshieldServiceBitdefender = 1,
  FireshieldServiceIp = 2,
};

@class HydraSDKConfiguration;
enum VPNState : NSInteger;
@class AFHydraCategorization;

SWIFT_CLASS("_TtC17VPNApplicationSDK8HydraSDK")
@interface HydraSDK : NSObject
@property (nonatomic, readonly, strong) HydraSDKConfiguration * _Nonnull config;
@property (nonatomic, readonly) BOOL isLoggedIn;
@property (nonatomic, readonly, copy) NSString * _Nullable token;
@property (nonatomic, readonly, copy) NSDate * _Nullable connectedDate;
@property (nonatomic, readonly) enum VPNState state;
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceID;
@property (nonatomic, readonly, copy) NSString * _Nonnull carrierID;
@property (nonatomic, readonly) BOOL isBypassEnabled;
@property (nonatomic, readonly, strong) AFTrafficCounters * _Nullable counters;
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSError * _Nullable lastError;
@property (nonatomic, readonly, strong) AFHydraCategorization * _Nullable lastCategorization;
@property (nonatomic, readonly, strong) AFRemoteConfig * _Nullable remoteConfiguration;
- (nonnull instancetype)initWithConfiguration:(HydraSDKConfiguration * _Nonnull)configuration;
- (void)loginWithMethod:(AFAuthMethod * _Nonnull)method completion:(void (^ _Nonnull)(NSError * _Nullable, AFUser * _Nullable))completion;
- (void)logout:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)currentUser:(void (^ _Nonnull)(NSError * _Nullable, AFUser * _Nullable))completion;
- (void)availableLocations:(void (^ _Nonnull)(NSError * _Nullable, NSArray<AFVirtualLocation *> * _Nullable))completion;
- (void)purchaseWithToken:(NSString * _Nullable)token type:(NSString * _Nonnull)type completion:(void (^ _Nonnull)(NSError * _Nullable, NSDictionary<NSString *, id> * _Nullable))completion;
- (void)fetchRemoteConfigWithCompletion:(void (^ _Nonnull)(NSError * _Nullable, AFRemoteConfig * _Nullable))completion;
- (void)stop:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)startWithLocation:(AFVirtualLocation * _Nonnull)location completion:(void (^ _Nonnull)(NSError * _Nullable, AFVirtualLocation * _Nullable))completion;
- (void)remainingTraffic:(void (^ _Nonnull)(NSError * _Nullable, AFRemainingTraffic * _Nullable))completion;
- (void)scannedConnections:(void (^ _Nonnull)(NSError * _Nullable, NSUInteger))completion;
- (BOOL)updateWithConfiguration:(HydraSDKConfiguration * _Nonnull)configuration error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NEOnDemandRule;

SWIFT_CLASS("_TtC17VPNApplicationSDK21HydraSDKConfiguration")
@interface HydraSDKConfiguration : NSObject
- (nonnull instancetype)initWithHostURL:(NSString * _Nullable)hostURL carrierID:(NSString * _Nonnull)carrierID extensionBundleID:(NSString * _Nonnull)extensionBundleID groupID:(NSString * _Nonnull)groupID profileName:(NSString * _Nonnull)profileName debugLogging:(BOOL)debugLogging fireshieldConfig:(FireshieldConfig * _Nonnull)fireshieldConfig serverAddressDisplayName:(NSString * _Nullable)serverAddressDisplayName dnsAddress:(NSString * _Nullable)dnsAddress bypassDomains:(NSArray<NSString *> * _Nullable)bypassDomains onDemandRules:(NSArray<NEOnDemandRule *> * _Nullable)onDemandRules isBypassEnabled:(BOOL)isBypassEnabled isVPNIconFixEnabled:(BOOL)isVPNIconFixEnabled isOnDemandEnabled:(BOOL)isOnDemandEnabled deviceType:(NSString * _Nonnull)deviceType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




typedef SWIFT_ENUM(NSInteger, VPNState, open) {
  VPNStateInvalid = 0,
  VPNStateConnecting = 1,
  VPNStateConnected = 2,
  VPNStateDisconnecting = 3,
  VPNStateDisconnected = 4,
  VPNStateIdle = 5,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
